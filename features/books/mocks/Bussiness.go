// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	books "github.com/dragranzer/Golang-Mini-Project/features/books"
	mock "github.com/stretchr/testify/mock"
)

// Bussiness is an autogenerated mock type for the Bussiness type
type Bussiness struct {
	mock.Mock
}

// ChangeTersediabyName provides a mock function with given fields: name
func (_m *Bussiness) ChangeTersediabyName(name string) (books.Core, error) {
	ret := _m.Called(name)

	var r0 books.Core
	if rf, ok := ret.Get(0).(func(string) books.Core); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(books.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ClearDatabyBookID provides a mock function with given fields: id
func (_m *Bussiness) ClearDatabyBookID(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateData provides a mock function with given fields: data
func (_m *Bussiness) CreateData(data books.Core) (books.Core, error) {
	ret := _m.Called(data)

	var r0 books.Core
	if rf, ok := ret.Get(0).(func(books.Core) books.Core); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(books.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(books.Core) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllData provides a mock function with given fields:
func (_m *Bussiness) GetAllData() []books.Core {
	ret := _m.Called()

	var r0 []books.Core
	if rf, ok := ret.Get(0).(func() []books.Core); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]books.Core)
		}
	}

	return r0
}

// GetDetailData provides a mock function with given fields: name
func (_m *Bussiness) GetDetailData(name string) ([]books.Core, error) {
	ret := _m.Called(name)

	var r0 []books.Core
	if rf, ok := ret.Get(0).(func(string) []books.Core); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]books.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDetailDatabyID provides a mock function with given fields: id
func (_m *Bussiness) GetDetailDatabyID(id int) (books.Core, error) {
	ret := _m.Called(id)

	var r0 books.Core
	if rf, ok := ret.Get(0).(func(int) books.Core); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(books.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
